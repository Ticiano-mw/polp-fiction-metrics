{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 4,
  "iteration": 1603921615994,
  "links": [],
  "panels": [
    {
      "datasource": null,
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 4,
      "options": {
        "content": "<p style=\"font-size:80px; text-align: center;\"><img style=\"height:150px;\" src=\"https://i.imgur.com/nUSa44U.png\"/ > Key Performance Indicators</p>",
        "mode": "html"
      },
      "pluginVersion": "7.1.0",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": "$Database",
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 0,
        "y": 6
      },
      "id": 2,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "7.2.0",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select count(*) from role",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "account",
          "timeColumn": "created_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Cantidad de Roles",
      "type": "stat"
    },
    {
      "datasource": "$Database",
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "light-yellow",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 4,
        "y": 6
      },
      "id": 10,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "7.2.0",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select count(*) from policy",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "account",
          "timeColumn": "created_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Cantidad de Polcies",
      "type": "stat"
    },
    {
      "datasource": "$Database",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "displayName": "$__cell_0",
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 2
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 18,
        "w": 9,
        "x": 8,
        "y": 6
      },
      "id": 16,
      "options": {
        "displayMode": "gradient",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "fields": "",
          "values": true
        },
        "showUnfilled": true
      },
      "pluginVersion": "7.2.0",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select ro.name,\n       count(distinct ta.account_id) + count( distinct tu.user_id) + count(distinct ts.service_id) + count(distinct tr.assuming_role_id) as \"Total\"\nfrom role as ro\n         left join trusted_role_account as ta on ta.role_id = ro.id\n         left join trusted_role_user as tu on tu.role_id = ro.id\n         left join trusted_role_service as ts on ts.role_id = ro.id\n         left join trusted_role_role as tr on tr.role_id = ro.id\ngroup by ro.name\norder by Total desc limit 30",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "account",
          "timeColumn": "created_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Top Roles with more Trusted Entities ",
      "type": "bargauge"
    },
    {
      "datasource": "$Database",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "displayName": "$__cell_0",
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "light-green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 18,
        "w": 7,
        "x": 17,
        "y": 6
      },
      "id": 14,
      "options": {
        "displayMode": "gradient",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "fields": "",
          "values": true
        },
        "showUnfilled": true
      },
      "pluginVersion": "7.2.0",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select service.name as \"Service\", count(distinct role.arn)\nfrom service\n         left join permission on permission.service_id = service.id\n         left join policy on policy.id = permission.policy_id\n         left join role_policy on policy.id = role_policy.policy_id\n         left join role on role.id = role_policy.role_id\ngroup by service.name\norder by count(distinct role.arn) desc limit 20",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "account",
          "timeColumn": "created_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Role by service",
      "type": "bargauge"
    },
    {
      "aliasColors": {
        "Being used": "#96D98D",
        "Older than 90 days": "#FF7383",
        "On standard": "#73BF69",
        "With unused services": "#FF7383",
        "Without use": "#FF7383",
        "Younger than 90 days": "#96D98D"
      },
      "breakPoint": "50%",
      "cacheTimeout": null,
      "combine": {
        "label": "Others",
        "threshold": 0
      },
      "datasource": "$Database",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fontSize": "80%",
      "format": "short",
      "gridPos": {
        "h": 14,
        "w": 4,
        "x": 0,
        "y": 10
      },
      "id": 9,
      "interval": null,
      "legend": {
        "show": true,
        "values": true
      },
      "legendType": "Under graph",
      "links": [],
      "nullPointMode": "connected",
      "pieType": "pie",
      "pluginVersion": "7.1.3",
      "strokeWidth": 1,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select NOW() as time, count(distinct ro.id) as \"Without use\"\nfrom role as ro\nwhere last_used <= (NOW() - INTERVAL 90 DAY)\n   OR last_used is null;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "account",
          "timeColumn": "created_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select NOW()                                    as time,\n       count(ro.id) - (select count(distinct ro.id)\n                       from role as ro\n                       where last_used <= (NOW() - INTERVAL 90 DAY)\n                          OR last_used is null) as \"Being used\"\nfrom role as ro;\n",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "account",
          "timeColumn": "created_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Roles without use",
      "type": "grafana-piechart-panel",
      "valueName": "current"
    },
    {
      "aliasColors": {
        "Being used": "#96D98D",
        "On standard": "#96D98D",
        "With unused services": "#FF7383",
        "Without use": "#FF7383"
      },
      "breakPoint": "50%",
      "cacheTimeout": null,
      "combine": {
        "label": "Others",
        "threshold": 0
      },
      "datasource": "$Database",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fontSize": "80%",
      "format": "short",
      "gridPos": {
        "h": 14,
        "w": 4,
        "x": 4,
        "y": 10
      },
      "id": 8,
      "interval": null,
      "legend": {
        "show": true,
        "values": true
      },
      "legendType": "Under graph",
      "links": [],
      "nullPointMode": "connected",
      "pieType": "pie",
      "pluginVersion": "7.1.3",
      "strokeWidth": 1,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select now() as time, count(distinct pe.policy_id) as \"Without use\" from permission as pe where last_used < (NOW() - INTERVAL 90 DAY) or last_used is null;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "account",
          "timeColumn": "created_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select now() as time, count(distinct pe.policy_id) - (select count(distinct pe.policy_id) from permission as pe where last_used < (NOW() - INTERVAL 90 DAY) or last_used is null) as \"Being used\" from permission as pe;\n",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "account",
          "timeColumn": "created_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Policies without use",
      "type": "grafana-piechart-panel",
      "valueName": "current"
    },
    {
      "datasource": "$Database",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": null
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 5,
        "x": 0,
        "y": 24
      },
      "id": 19,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "7.2.0",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select count(distinct ro.arn) from role as ro left join trusted_role_account as ta on ta.role_id = ro.id\n\tleft join trusted_role_user as tu on tu.role_id = ro.id\n                                            left join trusted_role_role as tr on tr.role_id = ro.id\n                                        left join account on account.id = ta.account_id\n                                        left join user on user.id = tu.user_id\n                               where account.foreign = 1 or user.foreign = 1 or ro.foreign = 1 and account.blacklisted = 0",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "account",
          "timeColumn": "created_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Roles that trust external entities",
      "type": "stat"
    },
    {
      "aliasColors": {
        "External Trust Compliant": "#8AB8FF",
        "Not External Trust Compliant": "#FF7383"
      },
      "breakPoint": "50%",
      "cacheTimeout": null,
      "combine": {
        "label": "Others",
        "threshold": 0
      },
      "datasource": "$Database",
      "description": "This pie chart show which Roles are complaint (have an externalId set) from those Role that can be assumed from external entities.\n",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": null,
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "arn"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 592
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Total"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 67
              }
            ]
          }
        ]
      },
      "fontSize": "80%",
      "format": "short",
      "gridPos": {
        "h": 11,
        "w": 7,
        "x": 5,
        "y": 24
      },
      "id": 22,
      "interval": null,
      "legend": {
        "show": true,
        "sortDesc": true,
        "values": true
      },
      "legendType": "Under graph",
      "links": [],
      "nullPointMode": "connected",
      "pieType": "pie",
      "pluginVersion": "7.2.0",
      "strokeWidth": 1,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select now() as time , count(id) as \"External Trust Compliant\" from (select distinct ro.arn as tarn\n            from role as ro\n                     left join trusted_role_account as ta on ta.role_id = ro.id\n                     left join trusted_role_user as tu on tu.role_id = ro.id\n                     left join trusted_role_role as tr on tr.role_id = ro.id\n                     left join account on account.id = ta.account_id\n                     left join user on user.id = tu.user_id\n            where (account.foreign = 1 or user.foreign = 1 or ro.foreign = 1) and account.blacklisted = 0) as trusty left join role on role.arn=trusty.tarn where ext_entity_compliance=1;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "account",
          "timeColumn": "created_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select now() as time , count(id) as \"Not External Trust Compliant\" from (select distinct ro.arn as tarn\n            from role as ro\n                     left join trusted_role_account as ta on ta.role_id = ro.id\n                     left join trusted_role_user as tu on tu.role_id = ro.id\n                     left join trusted_role_role as tr on tr.role_id = ro.id\n                     left join account on account.id = ta.account_id\n                     left join user on user.id = tu.user_id\n            where (account.foreign = 1 or user.foreign = 1 or ro.foreign = 1) and account.blacklisted = 0) as trusty left join role on role.arn=trusty.tarn where ext_entity_compliance=0;",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "account",
          "timeColumn": "created_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "External Roles compliant",
      "type": "grafana-piechart-panel",
      "valueName": "current"
    },
    {
      "datasource": "$Database",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": null,
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "arn"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 592
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Total"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 67
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 11,
        "w": 7,
        "x": 12,
        "y": 24
      },
      "id": 18,
      "options": {
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "7.2.0",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select ro.arn,\n                   count(distinct ta.account_id) + count( distinct tu.user_id) + count(distinct tr.assuming_role_id) as \"Total\"\n            from role as ro\n                     left join trusted_role_account as ta on ta.role_id = ro.id\n                     left join trusted_role_user as tu on tu.role_id = ro.id\n                     left join trusted_role_role as tr on tr.role_id = ro.id\n                     left join account on account.id = ta.account_id\n                     left join user on user.id = tu.user_id\n            where account.foreign = 1 or user.foreign = 1 or ro.foreign = 1 and account.blacklisted = 0\n            group by ro.arn\n            order by Total desc",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "account",
          "timeColumn": "created_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Roles that trust external entities",
      "type": "table"
    },
    {
      "datasource": "$Database",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": null,
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 5,
        "x": 19,
        "y": 24
      },
      "id": 20,
      "options": {
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "7.2.0",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select distinct account.uuid, account.name from (select ro.arn,\n                   count(distinct ta.account_id) + count( distinct tu.user_id) + count(distinct tr.assuming_role_id) as \"Total\"\n            from role as ro\n                     left join trusted_role_account as ta on ta.role_id = ro.id\n                     left join trusted_role_user as tu on tu.role_id = ro.id\n                     left join trusted_role_role as tr on tr.role_id = ro.id\n                     left join account on account.id = ta.account_id\n                     left join user on user.id = tu.user_id\n            where account.foreign = 1 or user.foreign = 1 or ro.foreign = 1 and account.blacklisted = 0\n            group by ro.arn\n            order by Total desc) as asd inner join role on role.arn=asd.arn inner join account on role.account_id=account.id",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "account",
          "timeColumn": "created_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Cuentas que pueden ser accedidas por entidades externas",
      "type": "table"
    },
    {
      "datasource": "$Database",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": null,
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "arn"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 592
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Total"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 67
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 0,
        "y": 35
      },
      "id": 23,
      "options": {
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "7.2.0",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select ro.arn, DATEDIFF(NOW(), ro.last_used) as last_used\n            from role as ro\n                     left join trusted_role_account as ta on ta.role_id = ro.id\n                     left join trusted_role_user as tu on tu.role_id = ro.id\n                     left join trusted_role_role as tr on tr.role_id = ro.id\n                     left join account on account.id = ta.account_id\n                     left join user on user.id = tu.user_id\n            where (account.foreign = 1 or user.foreign = 1 or ro.foreign = 1) and account.blacklisted = 0 and (DATEDIFF(NOW(), ro.last_used) > 90 or ro.last_used is null)\n            order by last_used desc",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "account",
          "timeColumn": "created_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Roles that trust external entities with lastUsed",
      "type": "table"
    },
    {
      "datasource": "$Database",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": null,
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "arn"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 592
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Total"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 67
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 12,
        "y": 35
      },
      "id": 24,
      "options": {
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "7.2.0",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select distinct ro.arn, DATEDIFF(NOW(), ro.last_used) as last_used\n            from role as ro\n                     left join trusted_role_account as ta on ta.role_id = ro.id\n                     left join trusted_role_user as tu on tu.role_id = ro.id\n                     left join trusted_role_role as tr on tr.role_id = ro.id\n                     left join account on account.id = ta.account_id\n                     left join user on user.id = tu.user_id\n            where (account.foreign = 1 or user.foreign = 1 or ro.foreign = 1) and account.blacklisted = 0 and ro.ext_entity_compliance=0\n            order by last_used desc",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "account",
          "timeColumn": "created_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Roles that trust external entities without ExternalID",
      "type": "table"
    }
  ],
  "refresh": false,
  "schemaVersion": 26,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "POLPDBPRD",
          "value": "POLPDBPRD"
        },
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "Database",
        "options": [],
        "query": "mysql",
        "queryValue": "",
        "refresh": 1,
        "regex": "(POLP)\\w+",
        "skipUrlSync": false,
        "type": "datasource"
      }
    ]
  },
  "time": {
    "from": "2020-08-31T12:01:31.523Z",
    "to": "2020-09-01T00:01:31.523Z"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "",
  "title": "KPI Dashboards",
  "uid": "QAl9Q7vM2",
  "version": 25
}
